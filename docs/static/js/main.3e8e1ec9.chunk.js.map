{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","length","_List_toArray","xs","push","_List_map2","ys","_List_sortBy","zs","ws","vs","sort","_Utils_cmp","ord","elm$core$Basics$EQ","elm$core$Basics$LT","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_equal","_Utils_notEqual","_Utils_compare","n","elm$core$Basics$GT","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","root","curr","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_foldr","index","array","value","acc","from","to","slice","dest","source","destLen","itemsToCopy","tag","console","log","identifier","Error","_Basics_add","_Basics_mul","_Basics_pow","Math","pow","_Basics_modBy","modulus","answer","PI","E","cos","sin","tan","acos","asin","atan","atan2","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","round","sqrt","_Basics_isNaN","isNaN","_String_cons","chr","str","string","len","word","charCodeAt","join","isGood","char","state","_String_foldr","_String_split","sep","split","_String_join","strs","_String_slice","start","end","_String_all","_String_contains","sub","indexOf","_String_startsWith","_String_indexes","lastIndexOf","subLen","is","_String_fromNumber","number","_Json_decodeField","field","decoder","_Json_mapMany","decoders","callback","_Json_map1","d1","_Json_map2","d2","_Json_run","d3","d4","d5","d6","d7","d8","_Json_runHelp","JSON","parse","elm$core$Result$Err","elm$json$Json$Decode$Failure","message","_Json_wrap","_Json_unwrap","elm$core$Result$Ok","_Json_expecting","isFinite","String","isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","errors","temp","elm$json$Json$Decode$OneOf","toElmValue","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","impl","flagDecoder","debugMetadata","args","_Platform_initialize","a1","bd","bb","init","update","subscriptions","stepperBuilder","undefined","managers","model","stepper","sendToApp","ports","_Platform_effectManagers","manager","_Platform_instantiateManager","_Platform_setupEffects","viewMetadata","_Platform_dispatchEffects","_Platform_createManager","onEffects","onSelfMsg","cmdMap","subMap","info","router","loop","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_map","tagger","bag","o","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","_Platform_checkPortName","name","_Platform_outgoingPortMap","_Platform_setupOutgoingPort","time","subs","converter","r","id","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","splice","finalTagger","_VirtualDom_divertHrefToApp","_Time_setInterval","interval","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","virtualNode","node","parentNode","replaceChild","_VirtualDom_render","_VirtualDom_text","_VirtualDom_nodeNS","namespace","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_thunk","refs","thunk","A7","A8","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","attr","elm$virtual_dom$VirtualDom$toHandlerInt","elm$json$Json$Decode$map2","_VirtualDom_mapEventTuple","_VirtualDom_mapEventRecord","elm$json$Json$Decode$succeed","elm$json$Json$Decode$map","_VirtualDom_mapHandler","_VirtualDom_passiveSupported","tuple","record","z","ao","al","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","window","Object","defineProperty","get","initialHandler","event","stopPropagation","currentEventNode","preventDefault","_VirtualDom_equalEvents","_VirtualDom_diff","patches","_VirtualDom_diffHelp","_VirtualDom_pushPatch","data","patch","s","t","u","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","xNext","yNext","xNextKey","xNextNode","oldMatch","yNextKey","yNextNode","newMatch","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","insert","_VirtualDom_applyPatchReorderEndInsertsHelp","_VirtualDom_applyPatchReorder","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","tagName","toLowerCase","_Browser_element","initialModel","view","bf","currNode","_Browser_makeAnimator","nextNode","_Browser_requestAnimationFrame","divertHrefToApp","Z","title","bodyNode","body","doc","aU","bc","requestAnimationFrame","draw","updateIfNeeded","nextModel","isSync","elm$core$Task$perform","elm$core$Basics$never","history","go","url","pushState","replaceState","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","_Browser_withNode","doStuff","getElementById","elm$browser$Browser$Dom$NotFound","functionName","scroll","scrollLeft","scrollTop","millisToPosix","elm$core$Dict$foldr","left","right","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Elm$JsArray$foldr","elm$core$Array$Array_elm_builtin","baseCase","_n0","tree","tail","helper","values","subTree","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Basics$toFloat","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Basics$eq","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$add","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Basics$mul","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","elm$core$Char$toCode","code","elm$core$Char$isLower","_char","elm$core$Char$isUpper","elm$core$Char$isAlpha","elm$core$Char$isAlphaNum","elm$core$Char$isDigit","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","elm$core$String$all","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$String$uncons","elm$core$String$split","elm$json$Json$Decode$indent","elm$json$Json$Encode$encode","elm$json$Json$Decode$errorOneOf","error","elm$json$Json$Decode$errorToString","elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","_n1","_n2","rest","$temp$error","$temp$context","indexName","introduction","json","elm$core$Platform$Cmd$batch","elm$core$Platform$Cmd$none","author$project$Main$addCmdNone","author$project$Point2$Point2","author$project$Direction$toPoint","direction","author$project$Point2$add","pointA","pointB","author$project$Point2$zero","author$project$GearShift$moveInPath","path","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$List$takeReverse","kept","elm$core$List$takeTailRec","elm$core$List$takeFast","_n0$1","_n0$5","_n4","_n5","_n7","_n8","_n9","_n10","elm$core$List$take","author$project$GearShift$pointsInPath","elm$core$List$any","isOkay","elm$core$List$drop","elm$random$Random$step","seed","elm$random$Random$addOne","elm$core$Basics$abs","elm$core$Basics$identity","elm$random$Random$Seed","elm$random$Random$next","state0","incr","elm$random$Random$peel","elm$random$Random$float","seed0","seed1","range","n1","elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","elm$random$Random$map","genA","elm$random$Random$weighted","first","numbers","normalize","total","elm$random$Random$uniform","valueList","author$project$GearShift$getGearShiftPathHelper","seedRandom","existingPoints","nextDirection","seedRandom1","nextPoint","author$project$GearShift$maxGear","author$project$Main$newModel","state1","randomSeed","ad","ar","author$project$GearShift$getGearShiftPath","af","U","L","am","Y","B","C","D","author$project$Main$KeyMsg","author$project$Main$Step","elm$core$Platform$Sub$batch","elm$core$Platform$Sub$map","elm$core$Platform$Sub$none","elm$time$Time$Every","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Task$succeed","elm$time$Time$State","processes","aG","aP","elm$time$Time$init","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","lK","lV","_n6","llK","llV","llLeft","llRight","lRight","rK","rV","rLeft","rRight","lLeft","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","stepState","rKey","rValue","lKey","lValue","_n3","leftovers","intermediateResult","elm$core$Process$kill","elm$core$Task$andThen","elm$core$Dict$get","targetKey","elm$time$Time$addMySub","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","spawns","existing","kills","newTaggers","spawnList","existingDict","killTask","newProcesses","elm$core$Platform$sendToApp","elm$core$Task$map2","taskA","taskB","elm$core$Task$sequence","tasks","elm$time$Time$now","Date","now","elm$time$Time$onSelfMsg","elm$core$Basics$composeL","elm$time$Time$subMap","elm$time$Time$subscription","elm$time$Time$every","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","pids","aD","aO","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","elm$browser$Browser$Events$nodeToKey","elm$browser$Browser$Events$Event","au","ay","elm$core$Task$map","elm$core$Task$init","elm$core$Task$spawnCmd","elm$core$Task$onEffects","commands","elm$core$Task$onSelfMsg","elm$core$Task$cmdMap","elm$core$Task$command","toMessage","elm$core$String$length","elm$core$String$slice","elm$core$String$dropLeft","elm$core$String$startsWith","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$left","elm$core$String$contains","elm$core$String$toInt","code0","elm$url$Url$Url","protocol","host","port_","query","fragment","av","ax","aC","aE","aH","aI","elm$url$Url$chompBeforePath","params","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$browser$Browser$Events$spawn","elm$core$Dict$fromList","assocs","elm$core$Dict$union","t1","t2","elm$browser$Browser$Events$onEffects","stepRight","deads","lives","news","stepLeft","pid","stepBoth","newSubs","deadPids","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","elm$browser$Browser$Events$onSelfMsg","messages","subKey","elm$browser$Browser$Events$subMap","toMsg","exports","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$on","elm$browser$Browser$Events$onKeyDown","ohanhi$keyboard$Keyboard$eventKeyDecoder","elm$browser$Browser$Events$onKeyUp","ohanhi$keyboard$Keyboard$subscriptions","ohanhi$keyboard$Keyboard$ups","author$project$KeyHelper$isPressed","author$project$GearShift$currentGear","elm$core$List$head","elm_community$list_extra$List$Extra$getAt","idx","author$project$Direction$reverse","elm$core$Maybe$map","maybe","elm$core$List$member","ohanhi$keyboard$Keyboard$ArrowDown","ohanhi$keyboard$Keyboard$ArrowLeft","ohanhi$keyboard$Keyboard$ArrowRight","ohanhi$keyboard$Keyboard$ArrowUp","ohanhi$keyboard$Keyboard$Arrows$arrows","keys","toInt","author$project$KeyHelper$arrowPressed","point","author$project$KeyHelper$isDown","author$project$Main$gearToMetersPerSecond","gear","author$project$Main$newCar","lane","metersPerSecond","metersLeft","T","ag","elm$random$Random$andThen","newSeed","genB","elm$random$Random$int","threshhold","seedN","accountForBias","author$project$Main$addRandomCar","author$project$Main$laneCount","car","elm$json$Json$Encode$object","pairs","obj","elm$json$Json$Encode$string","elm$json$Json$Encode$bool","author$project$Json$encodePortOutMsg","aN","author$project$Json$encodeRecord_soundName_String_","a2","author$project$Json$encodeRecord_soundName_String_loop_Bool_","author$project$Ports$portOut","author$project$Main$playSound","soundName","elm$core$Maybe$withDefault","_default","elm_community$list_extra$List$Extra$dropWhile","predicate","dropWhile","author$project$Main$nextCheckpoint","elm$core$Basics$clamp","elm$core$Basics$min","elm$core$Basics$neq","elm$core$List$filter","ohanhi$keyboard$Keyboard$Character","author$project$Main$step","model1","cmd","npcCarTuples","npcCar","hasCollided","author$project$Main$handleCollision","targetLane1","author$project$GearShift$nextGearDirection","author$project$GearShift$previousGearDirection","ohanhi$keyboard$Keyboard$Backspace","ohanhi$keyboard$Keyboard$Clear","ohanhi$keyboard$Keyboard$Copy","ohanhi$keyboard$Keyboard$CrSel","ohanhi$keyboard$Keyboard$Cut","ohanhi$keyboard$Keyboard$Delete","ohanhi$keyboard$Keyboard$EraseEof","ohanhi$keyboard$Keyboard$ExSel","ohanhi$keyboard$Keyboard$Insert","ohanhi$keyboard$Keyboard$Paste","ohanhi$keyboard$Keyboard$Redo","ohanhi$keyboard$Keyboard$Undo","ohanhi$keyboard$Keyboard$F1","ohanhi$keyboard$Keyboard$F10","ohanhi$keyboard$Keyboard$F11","ohanhi$keyboard$Keyboard$F12","ohanhi$keyboard$Keyboard$F13","ohanhi$keyboard$Keyboard$F14","ohanhi$keyboard$Keyboard$F15","ohanhi$keyboard$Keyboard$F16","ohanhi$keyboard$Keyboard$F17","ohanhi$keyboard$Keyboard$F18","ohanhi$keyboard$Keyboard$F19","ohanhi$keyboard$Keyboard$F2","ohanhi$keyboard$Keyboard$F20","ohanhi$keyboard$Keyboard$F3","ohanhi$keyboard$Keyboard$F4","ohanhi$keyboard$Keyboard$F5","ohanhi$keyboard$Keyboard$F6","ohanhi$keyboard$Keyboard$F7","ohanhi$keyboard$Keyboard$F8","ohanhi$keyboard$Keyboard$F9","ohanhi$keyboard$Keyboard$ChannelDown","ohanhi$keyboard$Keyboard$ChannelUp","ohanhi$keyboard$Keyboard$MediaFastForward","ohanhi$keyboard$Keyboard$MediaPause","ohanhi$keyboard$Keyboard$MediaPlay","ohanhi$keyboard$Keyboard$MediaPlayPause","ohanhi$keyboard$Keyboard$MediaRecord","ohanhi$keyboard$Keyboard$MediaRewind","ohanhi$keyboard$Keyboard$MediaStop","ohanhi$keyboard$Keyboard$MediaTrackNext","ohanhi$keyboard$Keyboard$MediaTrackPrevious","ohanhi$keyboard$Keyboard$Alt","ohanhi$keyboard$Keyboard$AltGraph","ohanhi$keyboard$Keyboard$CapsLock","ohanhi$keyboard$Keyboard$Control","ohanhi$keyboard$Keyboard$Fn","ohanhi$keyboard$Keyboard$FnLock","ohanhi$keyboard$Keyboard$Hyper","ohanhi$keyboard$Keyboard$Meta","ohanhi$keyboard$Keyboard$NumLock","ohanhi$keyboard$Keyboard$ScrollLock","ohanhi$keyboard$Keyboard$Shift","ohanhi$keyboard$Keyboard$Super","ohanhi$keyboard$Keyboard$Symbol","ohanhi$keyboard$Keyboard$SymbolLock","ohanhi$keyboard$Keyboard$End","ohanhi$keyboard$Keyboard$Home","ohanhi$keyboard$Keyboard$PageDown","ohanhi$keyboard$Keyboard$PageUp","ohanhi$keyboard$Keyboard$oneOf","fns","oneOf","ohanhi$keyboard$Keyboard$AppSwitch","ohanhi$keyboard$Keyboard$Call","ohanhi$keyboard$Keyboard$Camera","ohanhi$keyboard$Keyboard$CameraFocus","ohanhi$keyboard$Keyboard$EndCall","ohanhi$keyboard$Keyboard$GoBack","ohanhi$keyboard$Keyboard$GoHome","ohanhi$keyboard$Keyboard$HeadsetHook","ohanhi$keyboard$Keyboard$LastNumberRedial","ohanhi$keyboard$Keyboard$MannerMode","ohanhi$keyboard$Keyboard$Notification","ohanhi$keyboard$Keyboard$VoiceDial","ohanhi$keyboard$Keyboard$Again","ohanhi$keyboard$Keyboard$Attn","ohanhi$keyboard$Keyboard$Cancel","ohanhi$keyboard$Keyboard$ContextMenu","ohanhi$keyboard$Keyboard$Escape","ohanhi$keyboard$Keyboard$Execute","ohanhi$keyboard$Keyboard$Find","ohanhi$keyboard$Keyboard$Finish","ohanhi$keyboard$Keyboard$Help","ohanhi$keyboard$Keyboard$Pause","ohanhi$keyboard$Keyboard$Play","ohanhi$keyboard$Keyboard$Props","ohanhi$keyboard$Keyboard$Select","ohanhi$keyboard$Keyboard$ZoomIn","ohanhi$keyboard$Keyboard$ZoomOut","ohanhi$keyboard$Keyboard$Enter","ohanhi$keyboard$Keyboard$Spacebar","ohanhi$keyboard$Keyboard$Tab","ohanhi$keyboard$Keyboard$anyKey","ohanhi$keyboard$Keyboard$insert","keyParser","rawKey","ohanhi$keyboard$Keyboard$remove","ohanhi$keyboard$Keyboard$update","ohanhi$keyboard$Keyboard$updateWithParser","author$project$Main$update","keyMsg","newKeys","elm$core$String$fromFloat","author$project$Helper$px","elm$html$Html$Attributes$style","author$project$Helper$positionAndSize","position","elm$html$Html$div","author$project$Main$debugView","author$project$GearShift$drawDirection","stepsFromCurrentGear","length1","position1","elm$html$Html$text","author$project$GearShift$drawGearNumber","gearIndex","author$project$GearShift$flip","_function","author$project$Point2$map","mapFunc","author$project$GearShift$moveInDirection","elm$html$Html$img","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$src","test","author$project$Helper$imageView","image","ba","a9","author$project$Images$stickShift","author$project$Point2$sub","elm$core$Basics$composeR","elm$core$Basics$modBy","author$project$GearShift$view","gearUpText","centerPoint","viewOffset","flooredGearIndex","getPath","incrementBy","drawGear","html","index1","forwardGearNumbers","forwardPath","reversePath","author$project$Images$npcCar","author$project$Images$npcCarDead","author$project$Images$playerCar","author$project$Main$NewGame","author$project$Main$screenSize","author$project$Main$getRoadPos","tx","ty","author$project$Main$svgPoints","points","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$viewBox","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","author$project$Main$svgPositionAndSize","elm$svg$Svg$trustedNode","elm$svg$Svg$polygon","elm$svg$Svg$polyline","elm$svg$Svg$svg","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$points","elm$svg$Svg$Attributes$stroke","elm$svg$Svg$Attributes$strokeDasharray","elm$svg$Svg$Attributes$strokeDashoffset","elm$svg$Svg$Attributes$strokeWidth","author$project$Main$backgroundView","drawLine","isDashed","elm$html$Html$br","elm$core$Basics$isInfinite","Infinity","elm$core$Basics$isNaN","elm$core$String$cons","elm$core$String$fromChar","elm$core$String$repeatHelp","chunk","elm$core$String$repeat","elm$core$String$padRight","elm$core$String$reverse","elm$core$String$foldr","myrho$elm_round$Round$addSign","signed","isNotZero","elm$core$Char$fromCode","fromCharCode","myrho$elm_round$Round$increaseNum","head","headtail","myrho$elm_round$Round$splitComma","elm$core$Tuple$mapFirst","myrho$elm_round$Round$round","functor","fl","num","exp","myrho$elm_round$Round$toDecimal","before","after","normalized","totalLen","roundDigitIndex","increase","remains","numLen","numZeroed","myrho$elm_round$Round$roundFun","_int","author$project$Main$speedometerView","elm$core$List$sortBy","elm$html$Html$button","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$core$Basics$pow","author$project$Main$gameView","npcCars","distanceT","imageSize","author$project$Main$roadFarWidth","author$project$Main$main","Main","_Platform_mergeExportsProd","this","isLocalhost","Boolean","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","app","soundsPlaying","messageType","Constructor","messageBody","A1","sound","Audio","URL","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","register"],"mappings":"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A32B,IAAAyc,IAsKA,SAAAoB,GAEA,OADAA,GAEA,UACA,OAAArB,GAAAyd,IACA,eACA,OAAAzd,GAAA0d,IACA,eACA,OAAA1d,GAAA2d,IACA,cACA,OAAA3d,GAAA4d,IACA,SACA,OAAA5d,GAAA6d,IACA,aACA,OAAA7d,GAAA8d,IACA,YACA,OAAA9d,GAAA+d,IACA,WACA,OAAA/d,GAAAge,IACA,cACA,OAAAhe,GAAAie,IACA,iBACA,OAAAje,GAAAke,IACA,YACA,OAAAle,GAAAme,IACA,YAEA,SACA,OAAAne,GAAAoe,IACA,aACA,OAAApe,GAAAqe,IACA,iBACA,OAAAre,GAAAse,IACA,QACA,OAAAre,KA+JA,SAAAoB,GAEA,OADAA,GAEA,YACA,OAAArB,GAAAygB,IACA,UACA,OAAAzgB,GAAA2gB,IACA,eAEA,QACA,OAAA3gB,GAAA0gB,IACA,QACA,OAAAzgB,KApKA,SAAAoB,GAEA,OADAA,GAEA,gBACA,OAAArB,GAAAgX,IACA,gBACA,OAAAhX,GAAAiX,IACA,iBACA,OAAAjX,GAAAkX,IACA,cACA,OAAAlX,GAAAmX,IACA,WACA,OAAAnX,GAAAgX,IACA,WACA,OAAAhX,GAAAiX,IACA,YACA,OAAAjX,GAAAkX,IACA,SACA,OAAAlX,GAAAmX,IACA,UACA,OAAAnX,GAAAue,IACA,WACA,OAAAve,GAAAwe,IACA,eACA,OAAAxe,GAAAye,IACA,aACA,OAAAze,GAAA0e,IACA,QACA,OAAAze,KA7NA,SAAAoB,GAEA,OADAA,GAEA,gBACA,OAAArB,GAAA8a,IACA,YACA,OAAA9a,GAAA+a,IACA,WACA,OAAA/a,GAAAgb,IACA,YACA,OAAAhb,GAAAib,IACA,UACA,OAAAjb,GAAAkb,IACA,aACA,OAAAlb,GAAAmb,IACA,eACA,OAAAnb,GAAAob,IACA,YACA,OAAApb,GAAAqb,IACA,aACA,OAAArb,GAAAsb,IACA,YACA,OAAAtb,GAAAub,IACA,WACA,OAAAvb,GAAAwb,IACA,WACA,OAAAxb,GAAAyb,IACA,QACA,OAAAxb,KAuBA,SAAAoB,GAEA,OADAA,GAEA,SACA,OAAArB,GAAA0b,IACA,SACA,OAAA1b,GAAAqc,IACA,SACA,OAAArc,GAAAuc,IACA,SACA,OAAAvc,GAAAwc,IACA,SACA,OAAAxc,GAAAyc,IACA,SACA,OAAAzc,GAAA0c,IACA,SACA,OAAA1c,GAAA2c,IACA,SACA,OAAA3c,GAAA4c,IACA,SACA,OAAA5c,GAAA6c,IACA,UACA,OAAA7c,GAAA2b,IACA,UACA,OAAA3b,GAAA4b,IACA,UACA,OAAA5b,GAAA6b,IACA,UACA,OAAA7b,GAAA8b,IACA,UACA,OAAA9b,GAAA+b,IACA,UACA,OAAA/b,GAAAgc,IACA,UACA,OAAAhc,GAAAic,IACA,UACA,OAAAjc,GAAAkc,IACA,UACA,OAAAlc,GAAAmc,IACA,UACA,OAAAnc,GAAAoc,IACA,UACA,OAAApc,GAAAsc,IACA,QACA,OAAArc,KAkNA,SAAAoB,GAEA,OADAA,GAEA,YACA,OAAArB,GAAA0f,IACA,WACA,OAAA1f,GAAA2f,IACA,aACA,OAAA3f,GAAA4f,IACA,kBACA,OAAA5f,GAAA6f,IACA,aACA,OAAA7f,GAAA8f,IACA,cACA,OAAA9f,GAAA+f,IACA,WACA,OAAA/f,GAAAggB,IACA,aACA,OAAAhgB,GAAAigB,IACA,WACA,OAAAjgB,GAAAkgB,IACA,YACA,OAAAlgB,GAAAmgB,IACA,WACA,OAAAngB,GAAAogB,IACA,YACA,OAAApgB,GAAAqgB,IACA,aACA,OAAArgB,GAAAsgB,IACA,aACA,OAAAtgB,GAAAugB,IACA,cACA,OAAAvgB,GAAAwgB,IACA,QACA,OAAAvgB,KAhFA,SAAAoB,GAEA,OADAA,GAEA,gBACA,OAAArB,GAAA8e,IACA,WACA,OAAA9e,GAAA+e,IACA,aACA,OAAA/e,GAAAgf,IACA,kBACA,OAAAhf,GAAAif,IACA,cACA,OAAAjf,GAAAkf,IACA,aACA,OAAAlf,GAAAmf,IACA,aACA,OAAAnf,GAAAof,IACA,kBACA,OAAApf,GAAAqf,IACA,uBACA,OAAArf,GAAAsf,IACA,mBACA,OAAAtf,GAAAwf,IACA,iBA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","file":"static/js/main.3e8e1ec9.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (!x.$)\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.an.V === region.at.V)\n\t{\n\t\treturn 'on line ' + region.an.V;\n\t}\n\treturn 'on lines ' + region.an.V + ' through ' + region.at.V;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800)\n\t\t\t+\n\t\t\tString.fromCharCode(code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nvar _Json_decodeInt = { $: 2 };\nvar _Json_decodeBool = { $: 3 };\nvar _Json_decodeFloat = { $: 4 };\nvar _Json_decodeValue = { $: 5 };\nvar _Json_decodeString = { $: 6 };\n\nfunction _Json_decodeList(decoder) { return { $: 7, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 8, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 9, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 11,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 12,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 13,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 14,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 15,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 3:\n\t\t\treturn (typeof value === 'boolean')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: _Json_expecting('a BOOL', value);\n\n\t\tcase 2:\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn _Json_expecting('an INT', value);\n\t\t\t}\n\n\t\t\tif (-2147483647 < value && value < 2147483647 && (value | 0) === value) {\n\t\t\t\treturn elm$core$Result$Ok(value);\n\t\t\t}\n\n\t\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\t\treturn elm$core$Result$Ok(value);\n\t\t\t}\n\n\t\t\treturn _Json_expecting('an INT', value);\n\n\t\tcase 4:\n\t\t\treturn (typeof value === 'number')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: _Json_expecting('a FLOAT', value);\n\n\t\tcase 6:\n\t\t\treturn (typeof value === 'string')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: (value instanceof String)\n\t\t\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t\t\t: _Json_expecting('a STRING', value);\n\n\t\tcase 9:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 5:\n\t\t\treturn elm$core$Result$Ok(_Json_wrap(value));\n\n\t\tcase 7:\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 8:\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 10:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 11:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 12:\n\t\t\tif (typeof value !== 'object' || value === null || Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 13:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 14:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 15:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 3:\n\t\tcase 2:\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 5:\n\t\t\treturn true;\n\n\t\tcase 9:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 12:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 10:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 13:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 14:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 15:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a1,\n\t\timpl.bd,\n\t\timpl.bb,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tz: func(record.z),\n\t\tao: record.ao,\n\t\tal: record.al\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\tvalue\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\tvalue\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.z;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ao;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.al) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\tvar oldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tvar newMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a1,\n\t\timpl.bd,\n\t\timpl.bb,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bf;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a1,\n\t\timpl.bd,\n\t\timpl.bb,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.Z && impl.Z(sendToApp)\n\t\t\tvar view = impl.bf;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aU);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bc) && (_VirtualDom_doc.title = title = doc.bc);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.a5;\n\tvar onUrlRequest = impl.a6;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tZ: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aH === next.aH\n\t\t\t\t\t\t\t&& curr.ax === next.ax\n\t\t\t\t\t\t\t&& curr.aE.a === next.aE.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ta1: function(flags)\n\t\t{\n\t\t\treturn A3(impl.a1, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbf: impl.bf,\n\t\tbd: impl.bd,\n\t\tbb: impl.bb\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { a$: 'hidden', S: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { a$: 'mozHidden', S: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { a$: 'msHidden', S: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { a$: 'webkitHidden', S: 'webkitvisibilitychange' }\n\t\t: { a$: 'hidden', S: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\tcancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taM: _Browser_getScene(),\n\t\taQ: {\n\t\t\th: _Browser_window.pageXOffset,\n\t\t\ti: _Browser_window.pageYOffset,\n\t\t\tQ: _Browser_doc.documentElement.clientWidth,\n\t\t\tK: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tQ: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tK: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taM: {\n\t\t\t\tQ: node.scrollWidth,\n\t\t\t\tK: node.scrollHeight\n\t\t\t},\n\t\t\taQ: {\n\t\t\t\th: node.scrollLeft,\n\t\t\t\ti: node.scrollTop,\n\t\t\t\tQ: node.clientWidth,\n\t\t\t\tK: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taM: _Browser_getScene(),\n\t\t\taQ: {\n\t\t\t\th: x,\n\t\t\t\ti: y,\n\t\t\t\tQ: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tK: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taW: {\n\t\t\t\th: x + rect.left,\n\t\t\t\ti: y + rect.top,\n\t\t\t\tQ: rect.width,\n\t\t\t\tK: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.c) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.e);\n\t\t} else {\n\t\t\tvar treeLen = builder.c * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.f) : builder.f;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.c);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.e);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{f: nodeList, c: (len / elm$core$Array$branchFactor) | 0, e: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$addCmdNone = function (model) {\n\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n};\nvar author$project$Direction$Down = 3;\nvar author$project$Direction$Left = 0;\nvar author$project$Direction$Right = 1;\nvar author$project$Direction$Up = 2;\nvar author$project$GearShift$maxGear = 25;\nvar author$project$Point2$Point2 = F2(\n\tfunction (x, y) {\n\t\treturn {h: x, i: y};\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar author$project$Direction$toPoint = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn A2(author$project$Point2$Point2, -1, 0);\n\t\tcase 1:\n\t\t\treturn A2(author$project$Point2$Point2, 1, 0);\n\t\tcase 2:\n\t\t\treturn A2(author$project$Point2$Point2, 0, -1);\n\t\tdefault:\n\t\t\treturn A2(author$project$Point2$Point2, 0, 1);\n\t}\n};\nvar author$project$Point2$add = F2(\n\tfunction (pointA, pointB) {\n\t\treturn {h: pointA.h + pointB.h, i: pointA.i + pointB.i};\n\t});\nvar author$project$Point2$zero = A2(author$project$Point2$Point2, 0, 0);\nvar author$project$GearShift$moveInPath = function (path) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (a, b) {\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Point2$add,\n\t\t\t\t\tb,\n\t\t\t\t\tauthor$project$Direction$toPoint(a));\n\t\t\t}),\n\t\tauthor$project$Point2$zero,\n\t\tpath);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2(elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn elm$core$List$reverse(\n\t\t\tA3(elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _n0 = _Utils_Tuple2(n, list);\n\t\t\t_n0$1:\n\t\t\twhile (true) {\n\t\t\t\t_n0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_n0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_n0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _n2 = _n0.b;\n\t\t\t\t\t\t\t\t\tvar x = _n2.a;\n\t\t\t\t\t\t\t\t\tvar _n3 = _n2.b;\n\t\t\t\t\t\t\t\t\tvar y = _n3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n4 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n4.a;\n\t\t\t\t\t\t\t\t\t\tvar _n5 = _n4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n5.a;\n\t\t\t\t\t\t\t\t\t\tvar _n6 = _n5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b && _n0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n7 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n7.a;\n\t\t\t\t\t\t\t\t\t\tvar _n8 = _n7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n8.a;\n\t\t\t\t\t\t\t\t\t\tvar _n9 = _n8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n9.a;\n\t\t\t\t\t\t\t\t\t\tvar _n10 = _n9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _n10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _n10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_n0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar x = _n1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(elm$core$List$takeFast, 0, n, list);\n\t});\nvar author$project$GearShift$pointsInPath = function (path) {\n\treturn A2(\n\t\telm$core$List$map,\n\t\tfunction (index) {\n\t\t\treturn author$project$GearShift$moveInPath(\n\t\t\t\tA2(elm$core$List$take, index, path));\n\t\t},\n\t\tA2(\n\t\t\telm$core$List$range,\n\t\t\t0,\n\t\t\t(-1) + elm$core$List$length(path)));\n};\nvar author$project$GearShift$shiftsPerGear = 3;\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$addOne = function (value) {\n\treturn _Utils_Tuple2(1, value);\n};\nvar elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar elm$core$List$sum = function (numbers) {\n\treturn A3(elm$core$List$foldl, elm$core$Basics$add, 0, numbers);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = elm$random$Random$next(seed0);\n\t\t\tvar range = elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = elm$random$Random$peel(seed1);\n\t\t\tvar n0 = elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 1.34217728e8) + lo) / 9.007199254740992e15;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\telm$random$Random$next(seed1));\n\t\t};\n\t});\nvar elm$random$Random$getByWeight = F3(\n\tfunction (_n0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _n0.a;\n\t\t\tvar value = _n0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\telm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_n0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - elm$core$Basics$abs(weight);\n\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_n0) {\n\t\t\tvar weight = _n0.a;\n\t\t\treturn elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + elm$core$List$sum(\n\t\t\tA2(elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\telm$random$Random$map,\n\t\t\tA2(elm$random$Random$getByWeight, first, others),\n\t\t\tA2(elm$random$Random$float, 0, total));\n\t});\nvar elm$random$Random$uniform = F2(\n\tfunction (value, valueList) {\n\t\treturn A2(\n\t\t\telm$random$Random$weighted,\n\t\t\telm$random$Random$addOne(value),\n\t\t\tA2(elm$core$List$map, elm$random$Random$addOne, valueList));\n\t});\nvar author$project$GearShift$getGearShiftPathHelper = F2(\n\tfunction (seedRandom, path) {\n\t\tgetGearShiftPathHelper:\n\t\twhile (true) {\n\t\t\tvar existingPoints = author$project$GearShift$pointsInPath(\n\t\t\t\telm$core$List$reverse(path));\n\t\t\tvar _n0 = A2(\n\t\t\t\telm$random$Random$step,\n\t\t\t\tA2(\n\t\t\t\t\telm$random$Random$uniform,\n\t\t\t\t\t0,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[0, 2, 1, 3])),\n\t\t\t\tseedRandom);\n\t\t\tvar nextDirection = _n0.a;\n\t\t\tvar seedRandom1 = _n0.b;\n\t\t\tvar nextPoint = author$project$GearShift$moveInPath(\n\t\t\t\tA2(elm$core$List$cons, nextDirection, path));\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$List$length(path),\n\t\t\t\tauthor$project$GearShift$maxGear * author$project$GearShift$shiftsPerGear) > 0) {\n\t\t\t\treturn path;\n\t\t\t} else {\n\t\t\t\tif (A2(\n\t\t\t\t\telm$core$List$any,\n\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\treturn _Utils_eq(nextPoint, a);\n\t\t\t\t\t},\n\t\t\t\t\texistingPoints)) {\n\t\t\t\t\tvar $temp$seedRandom = seedRandom1,\n\t\t\t\t\t\t$temp$path = A2(elm$core$List$drop, 1, path);\n\t\t\t\t\tseedRandom = $temp$seedRandom;\n\t\t\t\t\tpath = $temp$path;\n\t\t\t\t\tcontinue getGearShiftPathHelper;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$seedRandom = seedRandom1,\n\t\t\t\t\t\t$temp$path = A2(elm$core$List$cons, nextDirection, path);\n\t\t\t\t\tseedRandom = $temp$seedRandom;\n\t\t\t\t\tpath = $temp$path;\n\t\t\t\t\tcontinue getGearShiftPathHelper;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$GearShift$getGearShiftPath = function (seed) {\n\treturn A2(author$project$GearShift$getGearShiftPathHelper, seed, _List_Nil);\n};\nvar author$project$Main$startingSecondsLeft = 30;\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar author$project$Main$newModel = function (seed) {\n\tvar randomSeed = elm$random$Random$initialSeed(seed);\n\treturn {\n\t\tad: -1000,\n\t\tar: 0,\n\t\ty: 1,\n\t\tt: author$project$GearShift$getGearShiftPath(randomSeed),\n\t\taf: _List_Nil,\n\t\tU: 0,\n\t\ta: 0.0,\n\t\tb: 0.0,\n\t\tv: _List_Nil,\n\t\tL: false,\n\t\tam: _List_Nil,\n\t\tY: randomSeed,\n\t\tk: author$project$Main$startingSecondsLeft,\n\t\tB: false,\n\t\ts: 0,\n\t\tC: 1,\n\t\tD: 0\n\t};\n};\nvar author$project$Main$KeyMsg = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Main$Step = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Main$framesPerSecond = 60;\nvar author$project$Main$secondsPerStep = 1000 / author$project$Main$framesPerSecond;\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$map = _Platform_map;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aG: processes, aP: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.aG;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.aP);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar ohanhi$keyboard$Keyboard$Down = function (a) {\n\treturn {$: 0, a: a};\n};\nvar ohanhi$keyboard$Keyboard$Up = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Events$Document = 0;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {aD: pids, aO: subs};\n\t});\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {au: event, ay: key};\n\t});\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {av: fragment, ax: host, aC: path, aE: port_, aH: protocol, aI: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.aD,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.ay;\n\t\tvar event = _n0.au;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.aO);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onKeyDown = A2(elm$browser$Browser$Events$on, 0, 'keydown');\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar ohanhi$keyboard$Keyboard$RawKey = elm$core$Basics$identity;\nvar ohanhi$keyboard$Keyboard$eventKeyDecoder = A2(\n\telm$json$Json$Decode$field,\n\t'key',\n\tA2(elm$json$Json$Decode$map, elm$core$Basics$identity, elm$json$Json$Decode$string));\nvar ohanhi$keyboard$Keyboard$downs = function (toMsg) {\n\treturn elm$browser$Browser$Events$onKeyDown(\n\t\tA2(elm$json$Json$Decode$map, toMsg, ohanhi$keyboard$Keyboard$eventKeyDecoder));\n};\nvar elm$browser$Browser$Events$onKeyUp = A2(elm$browser$Browser$Events$on, 0, 'keyup');\nvar ohanhi$keyboard$Keyboard$ups = function (toMsg) {\n\treturn elm$browser$Browser$Events$onKeyUp(\n\t\tA2(elm$json$Json$Decode$map, toMsg, ohanhi$keyboard$Keyboard$eventKeyDecoder));\n};\nvar ohanhi$keyboard$Keyboard$subscriptions = elm$core$Platform$Sub$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tohanhi$keyboard$Keyboard$downs(ohanhi$keyboard$Keyboard$Down),\n\t\t\tohanhi$keyboard$Keyboard$ups(ohanhi$keyboard$Keyboard$Up)\n\t\t]));\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(elm$core$Platform$Sub$map, author$project$Main$KeyMsg, ohanhi$keyboard$Keyboard$subscriptions),\n\t\t\t\tmodel.L ? elm$core$Platform$Sub$none : A2(elm$time$Time$every, author$project$Main$secondsPerStep, author$project$Main$Step)\n\t\t\t]));\n};\nvar elm$core$Basics$not = _Basics_not;\nvar author$project$KeyHelper$isPressed = F2(\n\tfunction (model, key) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\telm$core$Basics$eq(key),\n\t\t\tmodel.af) && (!A2(\n\t\t\telm$core$List$any,\n\t\t\telm$core$Basics$eq(key),\n\t\t\tmodel.am));\n\t});\nvar author$project$Main$debugMode = false;\nvar author$project$GearShift$currentGear = function (model) {\n\treturn (model.s / author$project$GearShift$shiftsPerGear) | 0;\n};\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm_community$list_extra$List$Extra$getAt = F2(\n\tfunction (idx, xs) {\n\t\treturn (idx < 0) ? elm$core$Maybe$Nothing : elm$core$List$head(\n\t\t\tA2(elm$core$List$drop, idx, xs));\n\t});\nvar author$project$GearShift$nextGearDirection = function (model) {\n\treturn A2(elm_community$list_extra$List$Extra$getAt, model.s, model.t);\n};\nvar author$project$Direction$reverse = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn 0;\n\t\tcase 2:\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn 2;\n\t}\n};\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar author$project$GearShift$previousGearDirection = function (model) {\n\treturn A2(\n\t\telm$core$Maybe$map,\n\t\tauthor$project$Direction$reverse,\n\t\tA2(elm_community$list_extra$List$Extra$getAt, model.s - 1, model.t));\n};\nvar author$project$Point2$mirrorY = function (point) {\n\treturn {h: point.h, i: -point.i};\n};\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar ohanhi$keyboard$Keyboard$ArrowDown = {$: 18};\nvar ohanhi$keyboard$Keyboard$ArrowLeft = {$: 19};\nvar ohanhi$keyboard$Keyboard$ArrowRight = {$: 20};\nvar ohanhi$keyboard$Keyboard$ArrowUp = {$: 21};\nvar ohanhi$keyboard$Keyboard$Arrows$boolToInt = function (bool) {\n\treturn bool ? 1 : 0;\n};\nvar ohanhi$keyboard$Keyboard$Arrows$arrows = function (keys) {\n\tvar toInt = function (key) {\n\t\treturn ohanhi$keyboard$Keyboard$Arrows$boolToInt(\n\t\t\tA2(elm$core$List$member, key, keys));\n\t};\n\tvar x = toInt(ohanhi$keyboard$Keyboard$ArrowRight) - toInt(ohanhi$keyboard$Keyboard$ArrowLeft);\n\tvar y = toInt(ohanhi$keyboard$Keyboard$ArrowUp) - toInt(ohanhi$keyboard$Keyboard$ArrowDown);\n\treturn {h: x, i: y};\n};\nvar author$project$KeyHelper$arrowPressed = function (model) {\n\treturn author$project$Point2$mirrorY(\n\t\t_Utils_eq(\n\t\t\tohanhi$keyboard$Keyboard$Arrows$arrows(model.af),\n\t\t\tohanhi$keyboard$Keyboard$Arrows$arrows(model.am)) ? author$project$Point2$zero : ohanhi$keyboard$Keyboard$Arrows$arrows(model.af));\n};\nvar author$project$KeyHelper$isDown = F2(\n\tfunction (model, key) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\telm$core$Basics$eq(key),\n\t\t\tmodel.af);\n\t});\nvar author$project$Main$gearToMetersPerSecond = function (gear) {\n\treturn 3 * A2(elm$core$Basics$logBase, 1.2, gear + 1);\n};\nvar author$project$Main$laneCount = 3;\nvar author$project$Main$newCar = F3(\n\tfunction (lane, metersPerSecond, metersLeft) {\n\t\treturn {T: false, ag: lane, a: metersLeft, b: metersPerSecond};\n\t});\nvar author$project$Main$roadMetersVisible = 500;\nvar elm$random$Random$andThen = F2(\n\tfunction (callback, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed) {\n\t\t\tvar _n1 = genA(seed);\n\t\t\tvar result = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\tvar _n2 = callback(result);\n\t\t\tvar genB = _n2;\n\t\t\treturn genB(newSeed);\n\t\t};\n\t});\nvar elm$random$Random$constant = function (value) {\n\treturn function (seed) {\n\t\treturn _Utils_Tuple2(value, seed);\n\t};\n};\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar elm_community$maybe_extra$Maybe$Extra$toList = function (m) {\n\tif (m.$ === 1) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tvar x = m.a;\n\t\treturn _List_fromArray(\n\t\t\t[x]);\n\t}\n};\nvar author$project$Main$addRandomCar = function (model) {\n\treturn function (_n0) {\n\t\tvar car = _n0.a;\n\t\tvar seed = _n0.b;\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\tU: _Utils_eq(car, elm$core$Maybe$Nothing) ? model.U : model.D,\n\t\t\t\tv: _Utils_ap(\n\t\t\t\t\telm_community$maybe_extra$Maybe$Extra$toList(car),\n\t\t\t\t\tmodel.v),\n\t\t\t\tY: seed\n\t\t\t});\n\t}(\n\t\tA2(\n\t\t\telm$random$Random$step,\n\t\t\tA2(\n\t\t\t\telm$random$Random$andThen,\n\t\t\t\tfunction (a) {\n\t\t\t\t\treturn (_Utils_cmp(\n\t\t\t\t\t\ta,\n\t\t\t\t\t\t(5.0e-2 * model.b) / author$project$Main$gearToMetersPerSecond(author$project$GearShift$maxGear)) < 0) ? A2(\n\t\t\t\t\t\telm$random$Random$map,\n\t\t\t\t\t\tfunction (lane) {\n\t\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\tA3(author$project$Main$newCar, lane, model.b * 0.1, model.a - author$project$Main$roadMetersVisible));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(elm$random$Random$int, 0, author$project$Main$laneCount - 1)) : elm$random$Random$constant(elm$core$Maybe$Nothing);\n\t\t\t\t},\n\t\t\t\tA2(elm$random$Random$float, 0, 1)),\n\t\t\tmodel.Y));\n};\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Json$encodeRecord_soundName_String_ = function (a) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'soundName',\n\t\t\t\telm$json$Json$Encode$string(a.aN))\n\t\t\t]));\n};\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar author$project$Json$encodeRecord_soundName_String_loop_Bool_ = function (a) {\n\treturn elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'soundName',\n\t\t\t\telm$json$Json$Encode$string(a.aN)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'loop',\n\t\t\t\telm$json$Json$Encode$bool(a.a2))\n\t\t\t]));\n};\nvar author$project$Json$encodePortOutMsg = function (a) {\n\tif (!a.$) {\n\t\tvar a1 = a.a;\n\t\treturn elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'Constructor',\n\t\t\t\t\telm$json$Json$Encode$string('PlaySound')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'A1',\n\t\t\t\t\tauthor$project$Json$encodeRecord_soundName_String_loop_Bool_(a1))\n\t\t\t\t]));\n\t} else {\n\t\tvar a1 = a.a;\n\t\treturn elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'Constructor',\n\t\t\t\t\telm$json$Json$Encode$string('StopSound')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'A1',\n\t\t\t\t\tauthor$project$Json$encodeRecord_soundName_String_(a1))\n\t\t\t\t]));\n\t}\n};\nvar author$project$Ports$PlaySound = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Ports$portOut = _Platform_outgoingPort('portOut', elm$core$Basics$identity);\nvar author$project$Main$playSound = function (soundName) {\n\treturn author$project$Ports$portOut(\n\t\tauthor$project$Json$encodePortOutMsg(\n\t\t\tauthor$project$Ports$PlaySound(\n\t\t\t\t{a2: false, aN: soundName})));\n};\nvar author$project$Main$handleCollision = function (model) {\n\tvar npcCarTuples = A2(\n\t\telm$core$List$map,\n\t\tfunction (npcCar) {\n\t\t\treturn ((!npcCar.T) && (function (a) {\n\t\t\t\treturn a < 0.8;\n\t\t\t}(\n\t\t\t\telm$core$Basics$abs(npcCar.ag - model.y)) && (elm$core$Basics$abs((npcCar.a - model.a) + 385) < 30))) ? _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tnpcCar,\n\t\t\t\t\t{T: true, b: npcCar.b / 2}),\n\t\t\t\ttrue) : _Utils_Tuple2(npcCar, false);\n\t\t},\n\t\tmodel.v);\n\tvar hasCollided = A2(\n\t\telm$core$List$any,\n\t\tfunction (_n1) {\n\t\t\tvar collided = _n1.b;\n\t\t\treturn collided;\n\t\t},\n\t\tnpcCarTuples);\n\treturn _Utils_Tuple2(\n\t\t_Utils_update(\n\t\t\tmodel,\n\t\t\t{\n\t\t\t\tb: hasCollided ? (model.b / 2) : model.b,\n\t\t\t\tv: A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (_n0) {\n\t\t\t\t\t\tvar npcCar = _n0.a;\n\t\t\t\t\t\treturn npcCar;\n\t\t\t\t\t},\n\t\t\t\t\tnpcCarTuples),\n\t\t\t\ts: hasCollided ? A2(elm$core$Basics$max, author$project$GearShift$shiftsPerGear, ((model.s * 2) / 3) | 0) : model.s\n\t\t\t}),\n\t\thasCollided ? author$project$Main$playSound('collision.ogg') : elm$core$Platform$Cmd$none);\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm_community$list_extra$List$Extra$dropWhile = F2(\n\tfunction (predicate, list) {\n\t\tdropWhile:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (predicate(x)) {\n\t\t\t\t\tvar $temp$predicate = predicate,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tpredicate = $temp$predicate;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue dropWhile;\n\t\t\t\t} else {\n\t\t\t\t\treturn list;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Main$nextCheckpoint = function (metersLeft) {\n\treturn A2(\n\t\telm$core$Maybe$withDefault,\n\t\t1000000,\n\t\telm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm_community$list_extra$List$Extra$dropWhile,\n\t\t\t\tfunction (a) {\n\t\t\t\t\treturn _Utils_cmp(a, metersLeft) < 0;\n\t\t\t\t},\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[500, 1500, 3000, 5000, 8000, 11000, 15000, 20000, 25000, 30000]))));\n};\nvar author$project$Ports$StopSound = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Main$stopSound = function (soundName) {\n\treturn author$project$Ports$portOut(\n\t\tauthor$project$Json$encodePortOutMsg(\n\t\t\tauthor$project$Ports$StopSound(\n\t\t\t\t{aN: soundName})));\n};\nvar elm$core$Basics$clamp = F3(\n\tfunction (low, high, number) {\n\t\treturn (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);\n\t});\nvar elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar ohanhi$keyboard$Keyboard$Character = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Main$step = function (model) {\n\treturn function (_n0) {\n\t\tvar model1 = _n0.a;\n\t\tvar cmd = _n0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tmodel1,\n\t\t\telm$core$Platform$Cmd$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tcmd,\n\t\t\t\t\t\t((!model.B) && model1.B) ? author$project$Main$playSound('astrix_on_mushrooms.ogg') : elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t((model.k > 0) && (model1.k <= 0)) ? author$project$Main$stopSound('astrix_on_mushrooms.ogg') : elm$core$Platform$Cmd$none\n\t\t\t\t\t])));\n\t}(\n\t\tauthor$project$Main$handleCollision(\n\t\t\tfunction (model1) {\n\t\t\t\treturn ((model1.k <= 0) || (_Utils_cmp(model1.D - 0.6, model1.U) < 0)) ? model1 : author$project$Main$addRandomCar(model1);\n\t\t\t}(\n\t\t\t\tfunction (model1) {\n\t\t\t\t\treturn (!_Utils_eq(\n\t\t\t\t\t\tauthor$project$Main$nextCheckpoint(-model.a),\n\t\t\t\t\t\tauthor$project$Main$nextCheckpoint(-model1.a))) ? _Utils_update(\n\t\t\t\t\t\tmodel1,\n\t\t\t\t\t\t{ad: model1.D, k: model1.k + 10}) : model1;\n\t\t\t\t}(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tar: (_Utils_cmp(model.ar, model.s) < 0) ? (model.ar + 1.0e-2) : (model.ar - 1.0e-2),\n\t\t\t\t\t\t\ty: function () {\n\t\t\t\t\t\t\t\tvar targetLane1 = model.C;\n\t\t\t\t\t\t\t\treturn (_Utils_cmp(targetLane1, model.y) < 0) ? A2(\n\t\t\t\t\t\t\t\t\telm$core$Basics$max,\n\t\t\t\t\t\t\t\t\ttargetLane1,\n\t\t\t\t\t\t\t\t\tmodel.y - A2(elm$core$Basics$min, 0.3, 1.0e-2 * model.b)) : A2(\n\t\t\t\t\t\t\t\t\telm$core$Basics$min,\n\t\t\t\t\t\t\t\t\ttargetLane1,\n\t\t\t\t\t\t\t\t\tmodel.y + A2(elm$core$Basics$min, 0.3, 1.0e-2 * model.b));\n\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\ta: model.a - (model.b / author$project$Main$secondsPerStep),\n\t\t\t\t\t\t\tb: A3(\n\t\t\t\t\t\t\t\telm$core$Basics$clamp,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tauthor$project$Main$gearToMetersPerSecond(\n\t\t\t\t\t\t\t\t\tauthor$project$GearShift$currentGear(model)),\n\t\t\t\t\t\t\t\t(model.k <= 0) ? ((model.b - 0.1) - (model.b * 1.0e-2)) : (model.b + 0.1)),\n\t\t\t\t\t\t\tv: A2(\n\t\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (npcCar) {\n\t\t\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\t\t\tnpcCar,\n\t\t\t\t\t\t\t\t\t\t{a: npcCar.a - (npcCar.b / author$project$Main$secondsPerStep)});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\t\t\tfunction (npcCar) {\n\t\t\t\t\t\t\t\t\t\treturn (_Utils_cmp(npcCar.a, model.a + 300) < 0) && (_Utils_cmp(npcCar.a, (model.a - author$project$Main$roadMetersVisible) - 50) > 0);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmodel.v)),\n\t\t\t\t\t\t\tam: model.af,\n\t\t\t\t\t\t\tk: model.B ? (model.k - 1.6e-2) : author$project$Main$startingSecondsLeft,\n\t\t\t\t\t\t\tB: (author$project$GearShift$currentGear(model) > 0) ? true : model.B,\n\t\t\t\t\t\t\ts: (model.k <= 0) ? model.s : (_Utils_eq(\n\t\t\t\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$arrowPressed(model)),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\tauthor$project$Direction$toPoint,\n\t\t\t\t\t\t\t\t\tauthor$project$GearShift$nextGearDirection(model))) ? (model.s + 1) : (_Utils_eq(\n\t\t\t\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$arrowPressed(model)),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\t\t\t\tauthor$project$Direction$toPoint,\n\t\t\t\t\t\t\t\t\tauthor$project$GearShift$previousGearDirection(model))) ? (model.s - 1) : model.s)),\n\t\t\t\t\t\t\tC: A3(\n\t\t\t\t\t\t\t\telm$core$Basics$clamp,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tauthor$project$Main$laneCount - 1,\n\t\t\t\t\t\t\t\t(model.b <= 1) ? model.C : ((A2(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$isPressed,\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\tohanhi$keyboard$Keyboard$Character('a')) || A2(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$isDown,\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\tohanhi$keyboard$Keyboard$Character('A'))) ? (model.C - 1) : ((A2(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$isPressed,\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\tohanhi$keyboard$Keyboard$Character('d')) || A2(\n\t\t\t\t\t\t\t\t\tauthor$project$KeyHelper$isPressed,\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\tohanhi$keyboard$Keyboard$Character('D'))) ? (model.C + 1) : model.C))),\n\t\t\t\t\t\t\tD: model.D + 1.6e-2\n\t\t\t\t\t\t})))));\n};\nvar ohanhi$keyboard$Keyboard$characterKey = function (_n0) {\n\tvar value = _n0;\n\treturn (elm$core$String$length(value) === 1) ? elm$core$Maybe$Just(\n\t\tohanhi$keyboard$Keyboard$Character(value)) : elm$core$Maybe$Nothing;\n};\nvar ohanhi$keyboard$Keyboard$Backspace = {$: 26};\nvar ohanhi$keyboard$Keyboard$Clear = {$: 27};\nvar ohanhi$keyboard$Keyboard$Copy = {$: 28};\nvar ohanhi$keyboard$Keyboard$CrSel = {$: 29};\nvar ohanhi$keyboard$Keyboard$Cut = {$: 30};\nvar ohanhi$keyboard$Keyboard$Delete = {$: 31};\nvar ohanhi$keyboard$Keyboard$EraseEof = {$: 32};\nvar ohanhi$keyboard$Keyboard$ExSel = {$: 33};\nvar ohanhi$keyboard$Keyboard$Insert = {$: 34};\nvar ohanhi$keyboard$Keyboard$Paste = {$: 35};\nvar ohanhi$keyboard$Keyboard$Redo = {$: 36};\nvar ohanhi$keyboard$Keyboard$Undo = {$: 37};\nvar ohanhi$keyboard$Keyboard$editingKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Backspace':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Backspace);\n\t\tcase 'Clear':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Clear);\n\t\tcase 'Copy':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Copy);\n\t\tcase 'CrSel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CrSel);\n\t\tcase 'Cut':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Cut);\n\t\tcase 'Delete':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Delete);\n\t\tcase 'EraseEof':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$EraseEof);\n\t\tcase 'ExSel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ExSel);\n\t\tcase 'Insert':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Insert);\n\t\tcase 'Paste':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Paste);\n\t\tcase 'Redo':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Redo);\n\t\tcase 'Undo':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Undo);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$F1 = {$: 38};\nvar ohanhi$keyboard$Keyboard$F10 = {$: 47};\nvar ohanhi$keyboard$Keyboard$F11 = {$: 48};\nvar ohanhi$keyboard$Keyboard$F12 = {$: 49};\nvar ohanhi$keyboard$Keyboard$F13 = {$: 50};\nvar ohanhi$keyboard$Keyboard$F14 = {$: 51};\nvar ohanhi$keyboard$Keyboard$F15 = {$: 52};\nvar ohanhi$keyboard$Keyboard$F16 = {$: 53};\nvar ohanhi$keyboard$Keyboard$F17 = {$: 54};\nvar ohanhi$keyboard$Keyboard$F18 = {$: 55};\nvar ohanhi$keyboard$Keyboard$F19 = {$: 56};\nvar ohanhi$keyboard$Keyboard$F2 = {$: 39};\nvar ohanhi$keyboard$Keyboard$F20 = {$: 57};\nvar ohanhi$keyboard$Keyboard$F3 = {$: 40};\nvar ohanhi$keyboard$Keyboard$F4 = {$: 41};\nvar ohanhi$keyboard$Keyboard$F5 = {$: 42};\nvar ohanhi$keyboard$Keyboard$F6 = {$: 43};\nvar ohanhi$keyboard$Keyboard$F7 = {$: 44};\nvar ohanhi$keyboard$Keyboard$F8 = {$: 45};\nvar ohanhi$keyboard$Keyboard$F9 = {$: 46};\nvar ohanhi$keyboard$Keyboard$functionKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'F1':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F1);\n\t\tcase 'F2':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F2);\n\t\tcase 'F3':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F3);\n\t\tcase 'F4':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F4);\n\t\tcase 'F5':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F5);\n\t\tcase 'F6':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F6);\n\t\tcase 'F7':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F7);\n\t\tcase 'F8':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F8);\n\t\tcase 'F9':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F9);\n\t\tcase 'F10':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F10);\n\t\tcase 'F11':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F11);\n\t\tcase 'F12':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F12);\n\t\tcase 'F13':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F13);\n\t\tcase 'F14':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F14);\n\t\tcase 'F15':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F15);\n\t\tcase 'F16':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F16);\n\t\tcase 'F17':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F17);\n\t\tcase 'F18':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F18);\n\t\tcase 'F19':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F19);\n\t\tcase 'F20':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$F20);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$ChannelDown = {$: 85};\nvar ohanhi$keyboard$Keyboard$ChannelUp = {$: 86};\nvar ohanhi$keyboard$Keyboard$MediaFastForward = {$: 87};\nvar ohanhi$keyboard$Keyboard$MediaPause = {$: 88};\nvar ohanhi$keyboard$Keyboard$MediaPlay = {$: 89};\nvar ohanhi$keyboard$Keyboard$MediaPlayPause = {$: 90};\nvar ohanhi$keyboard$Keyboard$MediaRecord = {$: 91};\nvar ohanhi$keyboard$Keyboard$MediaRewind = {$: 92};\nvar ohanhi$keyboard$Keyboard$MediaStop = {$: 93};\nvar ohanhi$keyboard$Keyboard$MediaTrackNext = {$: 94};\nvar ohanhi$keyboard$Keyboard$MediaTrackPrevious = {$: 95};\nvar ohanhi$keyboard$Keyboard$mediaKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'ChannelDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ChannelDown);\n\t\tcase 'ChannelUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ChannelUp);\n\t\tcase 'MediaFastForward':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaFastForward);\n\t\tcase 'MediaPause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPause);\n\t\tcase 'MediaPlay':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPlay);\n\t\tcase 'MediaPlayPause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaPlayPause);\n\t\tcase 'MediaRecord':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaRecord);\n\t\tcase 'MediaRewind':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaRewind);\n\t\tcase 'MediaStop':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaStop);\n\t\tcase 'MediaTrackNext':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaTrackNext);\n\t\tcase 'MediaTrackPrevious':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MediaTrackPrevious);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Alt = {$: 1};\nvar ohanhi$keyboard$Keyboard$AltGraph = {$: 2};\nvar ohanhi$keyboard$Keyboard$CapsLock = {$: 3};\nvar ohanhi$keyboard$Keyboard$Control = {$: 4};\nvar ohanhi$keyboard$Keyboard$Fn = {$: 5};\nvar ohanhi$keyboard$Keyboard$FnLock = {$: 6};\nvar ohanhi$keyboard$Keyboard$Hyper = {$: 7};\nvar ohanhi$keyboard$Keyboard$Meta = {$: 8};\nvar ohanhi$keyboard$Keyboard$NumLock = {$: 9};\nvar ohanhi$keyboard$Keyboard$ScrollLock = {$: 10};\nvar ohanhi$keyboard$Keyboard$Shift = {$: 11};\nvar ohanhi$keyboard$Keyboard$Super = {$: 12};\nvar ohanhi$keyboard$Keyboard$Symbol = {$: 13};\nvar ohanhi$keyboard$Keyboard$SymbolLock = {$: 14};\nvar ohanhi$keyboard$Keyboard$modifierKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Alt':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Alt);\n\t\tcase 'AltGraph':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$AltGraph);\n\t\tcase 'CapsLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CapsLock);\n\t\tcase 'Control':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Control);\n\t\tcase 'Fn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Fn);\n\t\tcase 'FnLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$FnLock);\n\t\tcase 'Hyper':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Hyper);\n\t\tcase 'Meta':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Meta);\n\t\tcase 'NumLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$NumLock);\n\t\tcase 'ScrollLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ScrollLock);\n\t\tcase 'Shift':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Shift);\n\t\tcase 'Super':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Super);\n\t\tcase 'OS':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Super);\n\t\tcase 'Symbol':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Symbol);\n\t\tcase 'SymbolLock':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$SymbolLock);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$End = {$: 22};\nvar ohanhi$keyboard$Keyboard$Home = {$: 23};\nvar ohanhi$keyboard$Keyboard$PageDown = {$: 24};\nvar ohanhi$keyboard$Keyboard$PageUp = {$: 25};\nvar ohanhi$keyboard$Keyboard$navigationKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'ArrowDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowDown);\n\t\tcase 'ArrowLeft':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowLeft);\n\t\tcase 'ArrowRight':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowRight);\n\t\tcase 'ArrowUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowUp);\n\t\tcase 'Down':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowDown);\n\t\tcase 'Left':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowLeft);\n\t\tcase 'Right':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowRight);\n\t\tcase 'Up':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ArrowUp);\n\t\tcase 'End':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$End);\n\t\tcase 'Home':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Home);\n\t\tcase 'PageDown':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$PageDown);\n\t\tcase 'PageUp':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$PageUp);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$oneOf = F2(\n\tfunction (fns, key) {\n\t\toneOf:\n\t\twhile (true) {\n\t\t\tif (!fns.b) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar fn = fns.a;\n\t\t\t\tvar rest = fns.b;\n\t\t\t\tvar _n1 = fn(key);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar a = _n1.a;\n\t\t\t\t\treturn elm$core$Maybe$Just(a);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$fns = rest,\n\t\t\t\t\t\t$temp$key = key;\n\t\t\t\t\tfns = $temp$fns;\n\t\t\t\t\tkey = $temp$key;\n\t\t\t\t\tcontinue oneOf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$AppSwitch = {$: 73};\nvar ohanhi$keyboard$Keyboard$Call = {$: 74};\nvar ohanhi$keyboard$Keyboard$Camera = {$: 75};\nvar ohanhi$keyboard$Keyboard$CameraFocus = {$: 76};\nvar ohanhi$keyboard$Keyboard$EndCall = {$: 77};\nvar ohanhi$keyboard$Keyboard$GoBack = {$: 78};\nvar ohanhi$keyboard$Keyboard$GoHome = {$: 79};\nvar ohanhi$keyboard$Keyboard$HeadsetHook = {$: 80};\nvar ohanhi$keyboard$Keyboard$LastNumberRedial = {$: 81};\nvar ohanhi$keyboard$Keyboard$MannerMode = {$: 83};\nvar ohanhi$keyboard$Keyboard$Notification = {$: 82};\nvar ohanhi$keyboard$Keyboard$VoiceDial = {$: 84};\nvar ohanhi$keyboard$Keyboard$phoneKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'AppSwitch':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$AppSwitch);\n\t\tcase 'Call':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Call);\n\t\tcase 'Camera':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Camera);\n\t\tcase 'CameraFocus':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$CameraFocus);\n\t\tcase 'EndCall':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$EndCall);\n\t\tcase 'GoBack':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$GoBack);\n\t\tcase 'GoHome':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$GoHome);\n\t\tcase 'HeadsetHook':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$HeadsetHook);\n\t\tcase 'LastNumberRedial':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$LastNumberRedial);\n\t\tcase 'Notification':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Notification);\n\t\tcase 'MannerMode':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$MannerMode);\n\t\tcase 'VoiceDial':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$VoiceDial);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Again = {$: 58};\nvar ohanhi$keyboard$Keyboard$Attn = {$: 59};\nvar ohanhi$keyboard$Keyboard$Cancel = {$: 60};\nvar ohanhi$keyboard$Keyboard$ContextMenu = {$: 61};\nvar ohanhi$keyboard$Keyboard$Escape = {$: 62};\nvar ohanhi$keyboard$Keyboard$Execute = {$: 63};\nvar ohanhi$keyboard$Keyboard$Find = {$: 64};\nvar ohanhi$keyboard$Keyboard$Finish = {$: 65};\nvar ohanhi$keyboard$Keyboard$Help = {$: 66};\nvar ohanhi$keyboard$Keyboard$Pause = {$: 67};\nvar ohanhi$keyboard$Keyboard$Play = {$: 68};\nvar ohanhi$keyboard$Keyboard$Props = {$: 69};\nvar ohanhi$keyboard$Keyboard$Select = {$: 70};\nvar ohanhi$keyboard$Keyboard$ZoomIn = {$: 71};\nvar ohanhi$keyboard$Keyboard$ZoomOut = {$: 72};\nvar ohanhi$keyboard$Keyboard$uiKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Again':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Again);\n\t\tcase 'Attn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Attn);\n\t\tcase 'Cancel':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Cancel);\n\t\tcase 'ContextMenu':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ContextMenu);\n\t\tcase 'Escape':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Escape);\n\t\tcase 'Execute':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Execute);\n\t\tcase 'Find':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Find);\n\t\tcase 'Finish':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Finish);\n\t\tcase 'Help':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Help);\n\t\tcase 'Pause':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Pause);\n\t\tcase 'Play':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Play);\n\t\tcase 'Props':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Props);\n\t\tcase 'Select':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Select);\n\t\tcase 'ZoomIn':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ZoomIn);\n\t\tcase 'ZoomOut':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$ZoomOut);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$Enter = {$: 15};\nvar ohanhi$keyboard$Keyboard$Spacebar = {$: 17};\nvar ohanhi$keyboard$Keyboard$Tab = {$: 16};\nvar ohanhi$keyboard$Keyboard$whitespaceKey = function (_n0) {\n\tvar value = _n0;\n\tswitch (value) {\n\t\tcase 'Enter':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Enter);\n\t\tcase 'Tab':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Tab);\n\t\tcase 'Spacebar':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Spacebar);\n\t\tcase ' ':\n\t\t\treturn elm$core$Maybe$Just(ohanhi$keyboard$Keyboard$Spacebar);\n\t\tdefault:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar ohanhi$keyboard$Keyboard$anyKey = ohanhi$keyboard$Keyboard$oneOf(\n\t_List_fromArray(\n\t\t[ohanhi$keyboard$Keyboard$characterKey, ohanhi$keyboard$Keyboard$modifierKey, ohanhi$keyboard$Keyboard$whitespaceKey, ohanhi$keyboard$Keyboard$navigationKey, ohanhi$keyboard$Keyboard$editingKey, ohanhi$keyboard$Keyboard$functionKey, ohanhi$keyboard$Keyboard$uiKey, ohanhi$keyboard$Keyboard$phoneKey, ohanhi$keyboard$Keyboard$mediaKey]));\nvar ohanhi$keyboard$Keyboard$insert = F3(\n\tfunction (keyParser, rawKey, list) {\n\t\tvar _n0 = keyParser(rawKey);\n\t\tif (!_n0.$) {\n\t\t\tvar key = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tkey,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\telm$core$Basics$neq(key),\n\t\t\t\t\tlist));\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$remove = F3(\n\tfunction (keyParser, rawKey, list) {\n\t\tvar _n0 = keyParser(rawKey);\n\t\tif (!_n0.$) {\n\t\t\tvar key = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\telm$core$Basics$neq(key),\n\t\t\t\tlist);\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$updateWithParser = F3(\n\tfunction (keyParser, msg, state) {\n\t\tif (!msg.$) {\n\t\t\tvar key = msg.a;\n\t\t\treturn A3(ohanhi$keyboard$Keyboard$insert, keyParser, key, state);\n\t\t} else {\n\t\t\tvar key = msg.a;\n\t\t\treturn A3(ohanhi$keyboard$Keyboard$remove, keyParser, key, state);\n\t\t}\n\t});\nvar ohanhi$keyboard$Keyboard$update = ohanhi$keyboard$Keyboard$updateWithParser(ohanhi$keyboard$Keyboard$anyKey);\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn author$project$Main$addCmdNone(model);\n\t\t\tcase 1:\n\t\t\t\tvar keyMsg = msg.a;\n\t\t\t\tvar newKeys = A2(ohanhi$keyboard$Keyboard$update, keyMsg, model.af);\n\t\t\t\treturn author$project$Main$addCmdNone(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taf: newKeys,\n\t\t\t\t\t\t\tL: (author$project$Main$debugMode && A2(\n\t\t\t\t\t\t\t\tauthor$project$KeyHelper$isPressed,\n\t\t\t\t\t\t\t\t{af: newKeys, am: model.af},\n\t\t\t\t\t\t\t\tohanhi$keyboard$Keyboard$Character('p'))) ? (!model.L) : model.L\n\t\t\t\t\t\t}));\n\t\t\tcase 2:\n\t\t\t\treturn author$project$Main$step(model);\n\t\t\tdefault:\n\t\t\t\treturn author$project$Main$addCmdNone(\n\t\t\t\t\tauthor$project$Main$newModel(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$random$Random$step,\n\t\t\t\t\t\t\tA2(elm$random$Random$int, 0, 100000),\n\t\t\t\t\t\t\tmodel.Y).a));\n\t\t}\n\t});\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar author$project$Helper$px = function (value) {\n\treturn elm$core$String$fromFloat(value) + 'px';\n};\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar author$project$Helper$positionAndSize = F2(\n\tfunction (position, size) {\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'absolute'),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'left',\n\t\t\t\tauthor$project$Helper$px(position.h)),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'top',\n\t\t\t\tauthor$project$Helper$px(position.i)),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'width',\n\t\t\t\tauthor$project$Helper$px(size.h)),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t'height',\n\t\t\t\tauthor$project$Helper$px(size.i))\n\t\t\t]);\n\t});\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar author$project$Main$debugView = F2(\n\tfunction (position, model) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\tA2(\n\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\tposition,\n\t\t\t\t{h: 500, i: 100}),\n\t\t\t_List_Nil);\n\t});\nvar author$project$GearShift$drawDirection = F4(\n\tfunction (position, length, direction, stepsFromCurrentGear) {\n\t\tvar thickness = 20.0;\n\t\tvar length1 = length + (thickness / 2);\n\t\tvar position1 = A2(\n\t\t\tauthor$project$Point2$add,\n\t\t\tposition,\n\t\t\tfunction () {\n\t\t\t\tswitch (direction) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn {h: -length1, i: (-thickness) / 2};\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn {h: 0, i: (-thickness) / 2};\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturn {h: (-thickness) / 2, i: -length1};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn {h: (-thickness) / 2, i: 0};\n\t\t\t\t}\n\t\t\t}());\n\t\tvar size = function () {\n\t\t\tswitch (direction) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn {h: length1, i: thickness};\n\t\t\t\tcase 1:\n\t\t\t\t\treturn {h: length1, i: thickness};\n\t\t\t\tcase 2:\n\t\t\t\t\treturn {h: thickness, i: length1};\n\t\t\t\tdefault:\n\t\t\t\t\treturn {h: thickness, i: length1};\n\t\t\t}\n\t\t}();\n\t\tvar color = '#333333FF';\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'background-color', color)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(author$project$Helper$positionAndSize, position1, size)),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\t(!stepsFromCurrentGear) ? A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'background-color', 'green')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(author$project$Helper$positionAndSize, position1, size)),\n\t\t\t\t\t_List_Nil) : A2(elm$html$Html$div, _List_Nil, _List_Nil)\n\t\t\t\t]));\n\t});\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$GearShift$drawGearNumber = F5(\n\tfunction (position, length, direction, stepsFromCurrentGear, gearIndex) {\n\t\tvar thickness = 20.0;\n\t\tvar length1 = length + (thickness / 2);\n\t\tvar size = function () {\n\t\t\tswitch (direction) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn {h: length1, i: thickness};\n\t\t\t\tcase 1:\n\t\t\t\t\treturn {h: length1, i: thickness};\n\t\t\t\tcase 2:\n\t\t\t\t\treturn {h: thickness, i: length1};\n\t\t\t\tdefault:\n\t\t\t\t\treturn {h: thickness, i: length1};\n\t\t\t}\n\t\t}();\n\t\tvar color = '#333333FF';\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'color', 'white')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Point2$add,\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\t{h: -4, i: -6}),\n\t\t\t\t\tsize)),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\telm$core$String$fromInt(gearIndex))\n\t\t\t\t]));\n\t});\nvar author$project$GearShift$flip = F3(\n\tfunction (_function, b, a) {\n\t\treturn A2(_function, a, b);\n\t});\nvar author$project$Point2$map = F2(\n\tfunction (mapFunc, point) {\n\t\treturn {\n\t\t\th: mapFunc(point.h),\n\t\t\ti: mapFunc(point.i)\n\t\t};\n\t});\nvar author$project$GearShift$moveInDirection = F3(\n\tfunction (direction, length, point) {\n\t\treturn A2(\n\t\t\tauthor$project$Point2$add,\n\t\t\tpoint,\n\t\t\tA2(\n\t\t\t\tauthor$project$Point2$map,\n\t\t\t\telm$core$Basics$mul(length),\n\t\t\t\tauthor$project$Direction$toPoint(direction)));\n\t});\nvar elm$html$Html$img = _VirtualDom_node('img');\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$src = function (url) {\n\treturn A2(\n\t\telm$html$Html$Attributes$stringProperty,\n\t\t'src',\n\t\t_VirtualDom_noJavaScriptOrHtmlUri(url));\n};\nvar author$project$Helper$imageView = F2(\n\tfunction (position, image) {\n\t\treturn A2(\n\t\t\telm$html$Html$img,\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$html$Html$Attributes$src(image.ba),\n\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\tposition,\n\t\t\t\t\tA2(author$project$Point2$map, elm$core$Basics$toFloat, image.a9))),\n\t\t\t_List_Nil);\n\t});\nvar author$project$Images$stickShift = {\n\ta9: {h: 130, i: 140},\n\tba: 'stick_shift.png'\n};\nvar author$project$Point2$sub = F2(\n\tfunction (pointA, pointB) {\n\t\treturn {h: pointA.h + pointB.h, i: pointA.i + pointB.i};\n\t});\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar author$project$GearShift$view = F3(\n\tfunction (position, size, model) {\n\t\tvar shiftLength = 100;\n\t\tvar gearUpText = (!author$project$GearShift$currentGear(model)) ? A2(\n\t\t\telm$html$Html$div,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '50px'),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-family', 'Consolas, Arial')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t{h: -350, i: 55},\n\t\t\t\t\t{h: 450, i: 30})),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Car idle, gear up with arrow keys! →')\n\t\t\t\t])) : A2(elm$html$Html$div, _List_Nil, _List_Nil);\n\t\tvar centerPoint = A2(\n\t\t\tauthor$project$Point2$map,\n\t\t\telm$core$Basics$mul(0.5),\n\t\t\tsize);\n\t\tvar viewOffset = function () {\n\t\t\tvar flooredGearIndex = elm$core$Basics$floor(model.ar);\n\t\t\tvar t = model.ar - flooredGearIndex;\n\t\t\tvar c = A2(\n\t\t\t\tauthor$project$Point2$map,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeR,\n\t\t\t\t\telm$core$Basics$mul(shiftLength),\n\t\t\t\t\telm$core$Basics$toFloat),\n\t\t\t\tauthor$project$GearShift$moveInPath(\n\t\t\t\t\tA3(author$project$GearShift$flip, elm$core$List$take, model.t, model.s)));\n\t\t\tvar b = A2(\n\t\t\t\tauthor$project$Point2$map,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeR,\n\t\t\t\t\telm$core$Basics$mul(shiftLength),\n\t\t\t\t\telm$core$Basics$toFloat),\n\t\t\t\tauthor$project$GearShift$moveInPath(\n\t\t\t\t\tA3(author$project$GearShift$flip, elm$core$List$take, model.t, 1 + flooredGearIndex)));\n\t\t\tvar a = A2(\n\t\t\t\tauthor$project$Point2$map,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeR,\n\t\t\t\t\telm$core$Basics$mul(shiftLength),\n\t\t\t\t\telm$core$Basics$toFloat),\n\t\t\t\tauthor$project$GearShift$moveInPath(\n\t\t\t\t\tA3(author$project$GearShift$flip, elm$core$List$take, model.t, flooredGearIndex)));\n\t\t\tvar interpolate = A2(\n\t\t\t\tauthor$project$Point2$add,\n\t\t\t\ta,\n\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Point2$map,\n\t\t\t\t\telm$core$Basics$mul(t),\n\t\t\t\t\tA2(author$project$Point2$sub, b, a)));\n\t\t\tvar _n2 = 0;\n\t\t\treturn centerPoint;\n\t\t}();\n\t\tvar getPath = F4(\n\t\t\tfunction (path, index, incrementBy, drawGear) {\n\t\t\t\treturn function (_n1) {\n\t\t\t\t\tvar html = _n1.a;\n\t\t\t\t\treturn html;\n\t\t\t\t}(\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\tfunction (direction, _n0) {\n\t\t\t\t\t\t\t\tvar html = _n0.a;\n\t\t\t\t\t\t\t\tvar position1 = _n0.b;\n\t\t\t\t\t\t\t\tvar index1 = _n0.c;\n\t\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tif (drawGear) {\n\t\t\t\t\t\t\t\t\t\t\tvar gearIndex = ((model.s + index1) / author$project$GearShift$shiftsPerGear) | 0;\n\t\t\t\t\t\t\t\t\t\t\treturn (!A2(elm$core$Basics$modBy, author$project$GearShift$shiftsPerGear, model.s + index1)) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\t\t\t\t\tauthor$project$GearShift$drawGearNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(author$project$Point2$add, position1, viewOffset),\n\t\t\t\t\t\t\t\t\t\t\t\t\tshiftLength,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex1,\n\t\t\t\t\t\t\t\t\t\t\t\t\tgearIndex),\n\t\t\t\t\t\t\t\t\t\t\t\thtml) : html;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t\t\t\t\tauthor$project$GearShift$drawDirection,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(author$project$Point2$add, position1, viewOffset),\n\t\t\t\t\t\t\t\t\t\t\t\t\tshiftLength,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdirection,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex1),\n\t\t\t\t\t\t\t\t\t\t\t\thtml);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t\tA3(author$project$GearShift$moveInDirection, direction, shiftLength, position1),\n\t\t\t\t\t\t\t\t\tindex1 + incrementBy);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t_Utils_Tuple3(_List_Nil, author$project$Point2$zero, index),\n\t\t\t\t\t\tpath));\n\t\t\t});\n\t\tvar forwardGearNumbers = A4(\n\t\t\tgetPath,\n\t\t\tA2(elm$core$List$drop, model.s, model.t),\n\t\t\t0,\n\t\t\t1,\n\t\t\ttrue);\n\t\tvar forwardPath = A4(\n\t\t\tgetPath,\n\t\t\tA2(elm$core$List$drop, model.s, model.t),\n\t\t\t0,\n\t\t\t1,\n\t\t\tfalse);\n\t\tvar reverseGearNumbers = A4(\n\t\t\tgetPath,\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tauthor$project$Direction$reverse,\n\t\t\t\telm$core$List$reverse(\n\t\t\t\t\tA2(elm$core$List$take, model.s, model.t))),\n\t\t\t-1,\n\t\t\t-1,\n\t\t\ttrue);\n\t\tvar reversePath = A4(\n\t\t\tgetPath,\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tauthor$project$Direction$reverse,\n\t\t\t\telm$core$List$reverse(\n\t\t\t\t\tA2(elm$core$List$take, model.s, model.t))),\n\t\t\t-1,\n\t\t\t-1,\n\t\t\tfalse);\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\tA2(author$project$Helper$positionAndSize, position, size),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'overflow', 'hidden'),\n\t\t\t\t\t\tA2(author$project$Helper$positionAndSize, author$project$Point2$zero, size)),\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\treversePath,\n\t\t\t\t\t\t_Utils_ap(forwardPath, forwardGearNumbers))),\n\t\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Helper$imageView,\n\t\t\t\t\t{h: 135, i: 19},\n\t\t\t\t\tauthor$project$Images$stickShift),\n\t\t\t\t\tgearUpText\n\t\t\t\t]));\n\t});\nvar author$project$Images$npcCar = {\n\ta9: {h: 342, i: 260},\n\tba: 'npc_car.png'\n};\nvar author$project$Images$npcCarDead = {\n\ta9: {h: 342, i: 260},\n\tba: 'npc_car_dead.png'\n};\nvar author$project$Images$playerCar = {\n\ta9: {h: 342, i: 260},\n\tba: 'car.png'\n};\nvar author$project$Main$NewGame = {$: 3};\nvar author$project$Main$roadFarWidth = 200;\nvar author$project$Main$roadNearWidth = 1000;\nvar author$project$Main$screenSize = A2(author$project$Point2$Point2, 1280, 720);\nvar author$project$Main$getRoadPos = F3(\n\tfunction (model, tx, ty) {\n\t\tvar offset = (model.y + 0.5) / author$project$Main$laneCount;\n\t\treturn {h: ((((author$project$Main$roadNearWidth - author$project$Main$roadFarWidth) * ty) + author$project$Main$roadFarWidth) * (tx - offset)) + (author$project$Main$screenSize.h / 2), i: ((author$project$Main$screenSize.i - (author$project$Main$screenSize.i / 2)) * ty) + (author$project$Main$screenSize.i / 2)};\n\t});\nvar author$project$Main$svgPoints = function (points) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t' ',\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$String$fromFloat(a.h) + (',' + elm$core$String$fromFloat(a.i));\n\t\t\t},\n\t\t\tpoints));\n};\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar author$project$Main$svgPositionAndSize = F2(\n\tfunction (position, size) {\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$x(\n\t\t\t\telm$core$String$fromInt(position.h)),\n\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\telm$core$String$fromInt(position.h)),\n\t\t\t\telm$svg$Svg$Attributes$width(\n\t\t\t\telm$core$String$fromInt(size.h)),\n\t\t\t\telm$svg$Svg$Attributes$height(\n\t\t\t\telm$core$String$fromInt(size.i)),\n\t\t\t\telm$svg$Svg$Attributes$viewBox(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\telm$core$String$fromInt,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[position.i, position.i, size.h, size.i]))))\n\t\t\t]);\n\t});\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$polygon = elm$svg$Svg$trustedNode('polygon');\nvar elm$svg$Svg$polyline = elm$svg$Svg$trustedNode('polyline');\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');\nvar elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar elm$svg$Svg$Attributes$strokeDasharray = _VirtualDom_attribute('stroke-dasharray');\nvar elm$svg$Svg$Attributes$strokeDashoffset = _VirtualDom_attribute('stroke-dashoffset');\nvar elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');\nvar author$project$Main$backgroundView = F3(\n\tfunction (position, size, model) {\n\t\tvar drawLine = F2(\n\t\t\tfunction (t, isDashed) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$svg$Svg$polyline,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tisDashed ? _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$strokeDasharray('100'),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$strokeDashoffset(\n\t\t\t\t\t\t\t\telm$core$String$fromFloat(10 * model.a))\n\t\t\t\t\t\t\t]) : _List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$stroke('white'),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$strokeWidth('5'),\n\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$points(\n\t\t\t\t\t\t\t\tauthor$project$Main$svgPoints(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, t, 0),\n\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, t, 1)\n\t\t\t\t\t\t\t\t\t\t])))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t_List_Nil);\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'background-color', 'green')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t\t{h: 0, i: author$project$Main$screenSize.i / 2},\n\t\t\t\t\t\t\t{h: author$project$Main$screenSize.h, i: author$project$Main$screenSize.i / 2})),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\tA2(author$project$Helper$positionAndSize, position, size),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t\t\t\tA2(author$project$Main$svgPositionAndSize, author$project$Point2$zero, author$project$Main$screenSize),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$svg$Svg$polygon,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('#333333FF'),\n\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$points(\n\t\t\t\t\t\t\t\t\t\t\tauthor$project$Main$svgPoints(\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, 0, 0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, 1, 0),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, 1, 1),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, 0, 1)\n\t\t\t\t\t\t\t\t\t\t\t\t\t])))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\tA2(drawLine, 0, false),\n\t\t\t\t\t\t\t\t\tA2(drawLine, 1 / 3, true),\n\t\t\t\t\t\t\t\t\tA2(drawLine, 2 / 3, true),\n\t\t\t\t\t\t\t\t\tA2(drawLine, 1, false)\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'background-color', 'lightblue')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t\tauthor$project$Point2$zero,\n\t\t\t\t\t\t\t{h: size.h, i: size.i / 2})),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t});\nvar author$project$Main$metersPerSecondToKph = 3.6;\nvar elm$html$Html$br = _VirtualDom_node('br');\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$isInfinite = _Basics_isInfinite;\nvar elm$core$Basics$isNaN = _Basics_isNaN;\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar elm$core$String$repeatHelp = F3(\n\tfunction (n, chunk, result) {\n\t\treturn (n <= 0) ? result : A3(\n\t\t\telm$core$String$repeatHelp,\n\t\t\tn >> 1,\n\t\t\t_Utils_ap(chunk, chunk),\n\t\t\t(!(n & 1)) ? result : _Utils_ap(result, chunk));\n\t});\nvar elm$core$String$repeat = F2(\n\tfunction (n, chunk) {\n\t\treturn A3(elm$core$String$repeatHelp, n, chunk, '');\n\t});\nvar elm$core$String$padRight = F3(\n\tfunction (n, _char, string) {\n\t\treturn _Utils_ap(\n\t\t\tstring,\n\t\t\tA2(\n\t\t\t\telm$core$String$repeat,\n\t\t\t\tn - elm$core$String$length(string),\n\t\t\t\telm$core$String$fromChar(_char)));\n\t});\nvar elm$core$String$reverse = _String_reverse;\nvar elm$core$String$foldr = _String_foldr;\nvar elm$core$String$toList = function (string) {\n\treturn A3(elm$core$String$foldr, elm$core$List$cons, _List_Nil, string);\n};\nvar myrho$elm_round$Round$addSign = F2(\n\tfunction (signed, str) {\n\t\tvar isNotZero = A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (c) {\n\t\t\t\treturn (c !== '0') && (c !== '.');\n\t\t\t},\n\t\t\telm$core$String$toList(str));\n\t\treturn _Utils_ap(\n\t\t\t(signed && isNotZero) ? '-' : '',\n\t\t\tstr);\n\t});\nvar elm$core$Char$fromCode = _Char_fromCode;\nvar myrho$elm_round$Round$increaseNum = function (_n0) {\n\tvar head = _n0.a;\n\tvar tail = _n0.b;\n\tif (head === '9') {\n\t\tvar _n1 = elm$core$String$uncons(tail);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn '01';\n\t\t} else {\n\t\t\tvar headtail = _n1.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$String$cons,\n\t\t\t\t'0',\n\t\t\t\tmyrho$elm_round$Round$increaseNum(headtail));\n\t\t}\n\t} else {\n\t\tvar c = elm$core$Char$toCode(head);\n\t\treturn ((c >= 48) && (c < 57)) ? A2(\n\t\t\telm$core$String$cons,\n\t\t\telm$core$Char$fromCode(c + 1),\n\t\t\ttail) : '0';\n\t}\n};\nvar myrho$elm_round$Round$splitComma = function (str) {\n\tvar _n0 = A2(elm$core$String$split, '.', str);\n\tif (_n0.b) {\n\t\tif (_n0.b.b) {\n\t\t\tvar before = _n0.a;\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar after = _n1.a;\n\t\t\treturn _Utils_Tuple2(before, after);\n\t\t} else {\n\t\t\tvar before = _n0.a;\n\t\t\treturn _Utils_Tuple2(before, '0');\n\t\t}\n\t} else {\n\t\treturn _Utils_Tuple2('0', '0');\n\t}\n};\nvar elm$core$Tuple$mapFirst = F2(\n\tfunction (func, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfunc(x),\n\t\t\ty);\n\t});\nvar myrho$elm_round$Round$toDecimal = function (fl) {\n\tvar _n0 = A2(\n\t\telm$core$String$split,\n\t\t'e',\n\t\telm$core$String$fromFloat(\n\t\t\telm$core$Basics$abs(fl)));\n\tif (_n0.b) {\n\t\tif (_n0.b.b) {\n\t\t\tvar num = _n0.a;\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar exp = _n1.a;\n\t\t\tvar e = A2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t0,\n\t\t\t\telm$core$String$toInt(\n\t\t\t\t\tA2(elm$core$String$startsWith, '+', exp) ? A2(elm$core$String$dropLeft, 1, exp) : exp));\n\t\t\tvar _n2 = myrho$elm_round$Round$splitComma(num);\n\t\t\tvar before = _n2.a;\n\t\t\tvar after = _n2.b;\n\t\t\tvar total = _Utils_ap(before, after);\n\t\t\tvar zeroed = (e < 0) ? A2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t'0',\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\tfunction (_n3) {\n\t\t\t\t\t\tvar a = _n3.a;\n\t\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\t\treturn a + ('.' + b);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\telm$core$Tuple$mapFirst(elm$core$String$fromChar),\n\t\t\t\t\t\telm$core$String$uncons(\n\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$String$repeat,\n\t\t\t\t\t\t\t\t\telm$core$Basics$abs(e),\n\t\t\t\t\t\t\t\t\t'0'),\n\t\t\t\t\t\t\t\ttotal))))) : A3(elm$core$String$padRight, e + 1, '0', total);\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tzeroed);\n\t\t} else {\n\t\t\tvar num = _n0.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\t(fl < 0) ? '-' : '',\n\t\t\t\tnum);\n\t\t}\n\t} else {\n\t\treturn '';\n\t}\n};\nvar myrho$elm_round$Round$roundFun = F3(\n\tfunction (functor, s, fl) {\n\t\tif (elm$core$Basics$isInfinite(fl) || elm$core$Basics$isNaN(fl)) {\n\t\t\treturn elm$core$String$fromFloat(fl);\n\t\t} else {\n\t\t\tvar signed = fl < 0;\n\t\t\tvar _n0 = myrho$elm_round$Round$splitComma(\n\t\t\t\tmyrho$elm_round$Round$toDecimal(\n\t\t\t\t\telm$core$Basics$abs(fl)));\n\t\t\tvar before = _n0.a;\n\t\t\tvar after = _n0.b;\n\t\t\tvar r = elm$core$String$length(before) + s;\n\t\t\tvar normalized = _Utils_ap(\n\t\t\t\tA2(elm$core$String$repeat, (-r) + 1, '0'),\n\t\t\t\tA3(\n\t\t\t\t\telm$core$String$padRight,\n\t\t\t\t\tr,\n\t\t\t\t\t'0',\n\t\t\t\t\t_Utils_ap(before, after)));\n\t\t\tvar totalLen = elm$core$String$length(normalized);\n\t\t\tvar roundDigitIndex = A2(elm$core$Basics$max, 1, r);\n\t\t\tvar increase = A2(\n\t\t\t\tfunctor,\n\t\t\t\tsigned,\n\t\t\t\tA3(elm$core$String$slice, roundDigitIndex, totalLen, normalized));\n\t\t\tvar remains = A3(elm$core$String$slice, 0, roundDigitIndex, normalized);\n\t\t\tvar num = increase ? elm$core$String$reverse(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t'1',\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\tmyrho$elm_round$Round$increaseNum,\n\t\t\t\t\t\telm$core$String$uncons(\n\t\t\t\t\t\t\telm$core$String$reverse(remains))))) : remains;\n\t\t\tvar numLen = elm$core$String$length(num);\n\t\t\tvar numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(\n\t\t\t\tnum,\n\t\t\t\tA2(\n\t\t\t\t\telm$core$String$repeat,\n\t\t\t\t\telm$core$Basics$abs(s),\n\t\t\t\t\t'0')) : ((_Utils_cmp(\n\t\t\t\ts,\n\t\t\t\telm$core$String$length(after)) < 0) ? (A3(elm$core$String$slice, 0, numLen - s, num) + ('.' + A3(elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(\n\t\t\t\tbefore + '.',\n\t\t\t\tA3(elm$core$String$padRight, s, '0', after))));\n\t\t\treturn A2(myrho$elm_round$Round$addSign, signed, numZeroed);\n\t\t}\n\t});\nvar myrho$elm_round$Round$round = myrho$elm_round$Round$roundFun(\n\tF2(\n\t\tfunction (signed, str) {\n\t\t\tvar _n0 = elm$core$String$uncons(str);\n\t\t\tif (_n0.$ === 1) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif ('5' === _n0.a.a) {\n\t\t\t\t\tif (_n0.a.b === '') {\n\t\t\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\t\t\treturn !signed;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = _n0.a;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\t\tvar _int = _n3.a;\n\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\treturn ((i > 53) && signed) || ((i >= 53) && (!signed));\n\t\t\t\t\t}(\n\t\t\t\t\t\telm$core$Char$toCode(_int));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\nvar author$project$Main$speedometerView = F2(\n\tfunction (position, model) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '30px')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\tposition,\n\t\t\t\t\t{h: 400, i: 300})),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\treturn 'KPH: ' + a;\n\t\t\t\t\t}(\n\t\t\t\t\t\tA2(myrho$elm_round$Round$round, 1, model.b * author$project$Main$metersPerSecondToKph))),\n\t\t\t\t\tA2(elm$html$Html$br, _List_Nil, _List_Nil),\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\treturn 'Distance: ' + a;\n\t\t\t\t\t}(\n\t\t\t\t\t\tA2(myrho$elm_round$Round$round, 2, (-model.a) / 1000))),\n\t\t\t\t\tA2(elm$html$Html$br, _List_Nil, _List_Nil),\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\treturn 'Gear: ' + a;\n\t\t\t\t\t}(\n\t\t\t\t\t\telm$core$String$fromInt(\n\t\t\t\t\t\t\tauthor$project$GearShift$currentGear(model)))),\n\t\t\t\t\tA2(elm$html$Html$br, _List_Nil, _List_Nil),\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\treturn 'Next checkpoint: ' + a;\n\t\t\t\t\t}(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tmyrho$elm_round$Round$round,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\t(author$project$Main$nextCheckpoint(-model.a) + model.a) / 1000)))\n\t\t\t\t]));\n\t});\nvar elm$core$List$sortBy = _List_sortBy;\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar elm$core$Basics$pow = _Basics_pow;\nvar elm_community$easing_functions$Ease$inExpo = function (time) {\n\treturn (time === 0.0) ? 0.0 : A2(elm$core$Basics$pow, 2, 10 * (time - 1));\n};\nvar author$project$Main$gameView = function (model) {\n\tvar npcCars = A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (npcCar) {\n\t\t\t\tvar imageSizeRatio = author$project$Main$roadFarWidth / author$project$Main$roadNearWidth;\n\t\t\t\tvar distanceT = function (a) {\n\t\t\t\t\treturn (-0.3) + elm_community$easing_functions$Ease$inExpo((a * 1) + 0.8);\n\t\t\t\t}(((author$project$Main$roadMetersVisible + npcCar.a) - model.a) / author$project$Main$roadMetersVisible);\n\t\t\t\tvar imageSize = A2(\n\t\t\t\t\tauthor$project$Point2$map,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$composeR,\n\t\t\t\t\t\telm$core$Basics$toFloat,\n\t\t\t\t\t\telm$core$Basics$mul(((1 - imageSizeRatio) * distanceT) + imageSizeRatio)),\n\t\t\t\t\tauthor$project$Images$npcCar.a9);\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$img,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$src(\n\t\t\t\t\t\t\t\tnpcCar.T ? author$project$Images$npcCarDead.ba : author$project$Images$npcCar.ba)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Point2$add,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tauthor$project$Point2$map,\n\t\t\t\t\t\t\t\t\telm$core$Basics$mul(-0.5),\n\t\t\t\t\t\t\t\t\timageSize),\n\t\t\t\t\t\t\t\tA3(author$project$Main$getRoadPos, model, (npcCar.ag + 0.5) / author$project$Main$laneCount, distanceT)),\n\t\t\t\t\t\t\timageSize)),\n\t\t\t\t\t_List_Nil);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$sortBy,\n\t\t\t\tfunction (npcCar) {\n\t\t\t\t\treturn npcCar.a;\n\t\t\t\t},\n\t\t\t\tmodel.v)));\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'overflow', 'hidden'),\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-family', 'Consolas, Arial')\n\t\t\t\t]),\n\t\t\tA2(author$project$Helper$positionAndSize, author$project$Point2$zero, author$project$Main$screenSize)),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA3(author$project$Main$backgroundView, author$project$Point2$zero, author$project$Main$screenSize, model),\n\t\t\t\tnpcCars,\n\t\t\t\tA2(\n\t\t\t\tauthor$project$Helper$imageView,\n\t\t\t\t{h: (author$project$Main$screenSize.h / 2) - (author$project$Images$playerCar.a9.h / 2), i: author$project$Main$screenSize.i - 150},\n\t\t\t\tauthor$project$Images$playerCar),\n\t\t\t\tA3(\n\t\t\t\tauthor$project$GearShift$view,\n\t\t\t\t{h: 800, i: 100},\n\t\t\t\t{h: 290, i: 290},\n\t\t\t\tmodel),\n\t\t\t\tA2(\n\t\t\t\tauthor$project$Main$speedometerView,\n\t\t\t\t{h: 50, i: 20},\n\t\t\t\tmodel),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '50px'),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t'color',\n\t\t\t\t\t\t\t(model.k < 10) ? 'red' : 'black')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t{h: (author$project$Main$screenSize.h / 2) - 200, i: 20},\n\t\t\t\t\t\t{h: 400, i: 300})),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t'Time Left: ' + A2(\n\t\t\t\t\t\t\tmyrho$elm_round$Round$round,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t\tA2(elm$core$Basics$max, 0, model.k)))\n\t\t\t\t\t])),\n\t\t\t\tmodel.B ? A2(elm$html$Html$div, _List_Nil, _List_Nil) : A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'color', 'white'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '50px'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'text-align', 'center')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t{h: (author$project$Main$screenSize.h / 2) - 300, i: 640},\n\t\t\t\t\t\t{h: 600, i: 300})),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('← Steer with A and D →')\n\t\t\t\t\t])),\n\t\t\t\t((model.k <= 0) && (model.b <= 0)) ? A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'text-align', 'center'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '50px'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'background-color', '#FFFFFFAA')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t{h: (author$project$Main$screenSize.h / 2) - 375, i: 300},\n\t\t\t\t\t\t{h: 750, i: 190})),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('TIME IS UP!'),\n\t\t\t\t\t\tA2(elm$html$Html$br, _List_Nil, _List_Nil),\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t'You traveled ' + (A2(myrho$elm_round$Round$round, 2, (-model.a) / 1000) + ' kilometers!')),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '40px'),\n\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'margin', '10px'),\n\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$NewGame)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text('Play again?')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])) : A2(elm$html$Html$div, _List_Nil, _List_Nil),\n\t\t\t\t(_Utils_cmp(model.ad + 3, model.D) > 0) ? A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'text-align', 'center'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'font-size', '50px')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Helper$positionAndSize,\n\t\t\t\t\t\t{h: (author$project$Main$screenSize.h / 2) - 375, i: 300},\n\t\t\t\t\t\t{h: 750, i: 190})),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Checkpoint!! (+10 seconds)')\n\t\t\t\t\t])) : A2(elm$html$Html$div, _List_Nil, _List_Nil)\n\t\t\t]));\n};\nvar author$project$Main$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$Main$gameView(model),\n\t\t\t\tA2(\n\t\t\t\tauthor$project$Main$debugView,\n\t\t\t\t{h: 0, i: 730},\n\t\t\t\tmodel)\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\ta1: function (_n0) {\n\t\t\treturn author$project$Main$addCmdNone(\n\t\t\t\tauthor$project$Main$newModel(123124));\n\t\t},\n\t\tbb: author$project$Main$subscriptions,\n\t\tbd: author$project$Main$update,\n\t\tbf: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nlet app = Elm.Main.init({\n  node: document.getElementById('root')\n});\n\nlet soundsPlaying = [];\n\napp.ports.portOut.subscribe( ( message ) => {\n    let messageType = message.Constructor;\n    switch (messageType)\n    {\n        case \"PlaySound\":\n        {\n            let messageBody = message.A1;\n            var sound = new Audio(\"../\" + messageBody.soundName);\n            sound.currentTime = 0;\n            sound.loop = messageBody.loop;\n            sound.play();\n            soundsPlaying.push({ soundName: messageBody.soundName, sound: sound });\n            break;\n        }\n        case \"StopSound\":\n        {\n            let messageBody = message.A1;\n            for (let i = soundsPlaying.length - 1; i >= 0; i--) {\n                if (soundsPlaying[i].soundName === messageBody.soundName) {\n                    soundsPlaying[i].sound.pause();\n                }\n            }\n            break;\n        }\n        default:\n            console.log(\"Message type \\\"\" + messageType + \"\\\" was not handled.\");\n            debugger;\n            break;\n    }\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}